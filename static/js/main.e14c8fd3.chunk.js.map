{"version":3,"sources":["WidgetApp.js","ChartApp.js","index.js"],"names":["a","fetch","then","response","json","App","useState","focusedIndex","setFocusedIndex","videos","setVideos","useEffect","fetchVideos","style","display","overflow","flexWrap","paddingLeft","map","video","index","VideoCell","key","id","isFocused","onMouseEnter","videoRef","useRef","isPlaying","setIsPlaying","videoPlayer","current","play","pause","borderRadius","marginRight","flexShrink","width","height","position","loop","muted","ref","src","file_url","poster","thumbnail_url","objectFit","top","flexDirection","justifyContent","backgroundImage","transition","opacity","fontSize","fontWeight","color","textShadow","padding","caption","ChartApp","numbers","setNumbers","sortedEntries","useMemo","Object","entries","sort","b","maxValue","Promise","resolve","setTimeout","Array","fill","Math","ceil","random","data","dataSet","reduce","acc","number","count","margin","gridTemplateColumns","columnGap","borderLeft","borderBottom","k","v","alignItems","alignSelf","background","textAlign","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.e14c8fd3.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\n\n// Instructions: Refactor this App to function like the demo https://bnhansn.github.io/fw-widget-demo\n// 1. Fetch videos from this url https://next-demo-flax.vercel.app/api/suggested_videos\n// 2. The first video should start playing automatically\n// 3. When the mouse hovers over a video, that video should start playing and all others should pause\n// 4. When a video starts playing, the caption should fade out\n\n// const video = {\n//   caption: 'Mars Rover',\n//   file_url:\n//     'https://cdn1.fireworktv.com/medias/2020/1/17/1579225505-saivlmkp/watermarked/540/techembed3*.mp4',\n//   id: 1,\n//   thumbnail_url:\n//     'https://cdn1.fireworktv.com/medias/2020/1/17/1579225697-jifpemag/540_960/techembed3.jpg'\n// }\n\n// export default function App() {\n//   const videoRef = useRef()\n\n//   useEffect(() => {\n//     videoRef.current.play()\n//     // videoRef.current.pause() pauses the video\n//   }, [])\n\n//   return (\n//     <>\n//       <video\n//         loop\n//         muted\n//         ref={videoRef}\n//         src={video.file_url}\n//         poster={video.thumbnail_url}\n//         style={{\n//           width: '154px',\n//           height: '250px'\n//         }}\n//       />\n//     </>\n//   )\n// }\n\nasync function fetchVideos() {\n  return await fetch(\n    'https://next-demo-flax.vercel.app/api/suggested_videos'\n  ).then((response) => response.json())\n}\n\nexport default function App() {\n  const [focusedIndex, setFocusedIndex] = useState(0)\n  const [videos, setVideos] = useState([])\n\n  useEffect(() => {\n    fetchVideos().then(({ videos }) => {\n      setVideos(videos)\n    })\n  }, [])\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        overflow: 'auto',\n        flexWrap: 'nowrap',\n        paddingLeft: '5px'\n      }}\n    >\n      {videos.map((video, index) => (\n        <VideoCell\n          key={video.id}\n          video={video}\n          index={index}\n          isFocused={focusedIndex === index}\n          onMouseEnter={() => setFocusedIndex(index)}\n        />\n      ))}\n    </div>\n  )\n}\n\nfunction VideoCell({ video, isFocused, onMouseEnter }) {\n  const videoRef = useRef()\n  const [isPlaying, setIsPlaying] = useState(false)\n\n  useEffect(() => {\n    const videoPlayer = videoRef.current\n\n    if (isFocused & !isPlaying) {\n      videoPlayer.play()\n      setIsPlaying(true)\n    }\n\n    if (!isFocused && isPlaying) {\n      videoPlayer.pause()\n      setIsPlaying(false)\n    }\n  }, [isFocused, isPlaying])\n\n  return (\n    <div\n      onMouseEnter={onMouseEnter}\n      style={{\n        borderRadius: '8px',\n        overflow: 'hidden',\n        marginRight: '10px',\n        flexShrink: 0,\n        width: '154px',\n        height: '250px',\n        position: 'relative'\n      }}\n    >\n      <video\n        loop\n        muted\n        ref={videoRef}\n        src={video.file_url}\n        poster={video.thumbnail_url}\n        style={{\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover'\n        }}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          top: 0,\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'flex-end',\n          backgroundImage:\n            'linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0) 40%, rgba(0, 0, 0, 0.1) 50%, rgba(0, 0, 0, 0.8))',\n          transition: 'opacity 200ms',\n          opacity: isPlaying ? 0 : 1\n        }}\n      >\n        <span\n          style={{\n            fontSize: '16px',\n            fontWeight: 'bold',\n            color: 'white',\n            textShadow: '1px 1px 1px rgba(0, 0, 0, 0.5)',\n            padding: '8px'\n          }}\n        >\n          {video.caption}\n        </span>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState, useMemo } from 'react'\n\n// Instructions: Create a histogram (bar) chart displaying the frequency of each\n// number in the fetchRandomNumbers response. The function returns an array of\n// 100 integers between 1-10.\n// Example solution: https://bnhansn.github.io/fw-widget-demo/#/chart\n\n// Example response: [2, 4, 4, 10, 1, 2, ...]\nfunction fetchRandomNumbers() {\n  return fetch(\n    'https://www.random.org/integers/?num=100&min=1&max=10&col=1&base=10&format=plain'\n  )\n    .then((response) => response.text())\n    .then((data) =>\n      data\n        .split('\\n')\n        .filter((n) => n !== '')\n        .map(Number)\n    )\n}\n\nfunction asyncCreateRandomNumbers() {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      const randomNumber = () => Math.ceil(Math.random() * 10)\n      const numbers = new Array(100).fill().map(randomNumber)\n      resolve(numbers)\n    }, 500)\n  })\n}\n\nexport default function ChartApp() {\n  const [numbers, setNumbers] = useState({})\n  const sortedEntries = useMemo(\n    () => Object.entries(numbers).sort((a, b) => b[1] - a[1]),\n    [numbers]\n  )\n  const maxValue = sortedEntries[0] && sortedEntries[0][1]\n\n  useEffect(() => {\n    asyncCreateRandomNumbers().then((data) => {\n      const dataSet = data.reduce((acc, number) => {\n        const count = acc[number] || 0\n        acc[number] = count + 1\n        return acc\n      }, {})\n      setNumbers(dataSet)\n    })\n  }, [])\n\n  return (\n    <div style={{ margin: 20 }}>\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(10, 1fr)',\n          columnGap: 5,\n          width: 500,\n          height: 500,\n          borderLeft: '1px solid black',\n          borderBottom: '1px solid black'\n        }}\n      >\n        {Object.entries(numbers).map(([k, v]) => {\n          return (\n            <div\n              key={k}\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                color: 'white',\n                alignSelf: 'flex-end',\n                height: `${(v / maxValue) * 100}%`,\n                background: 'palevioletred'\n              }}\n            >\n              {v}\n            </div>\n          )\n        })}\n      </div>\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(10, 1fr)',\n          width: 500,\n          columnGap: 5,\n          textAlign: 'center'\n        }}\n      >\n        {Object.entries(numbers).map(([k, v]) => {\n          return <div key={k}>{k}</div>\n        })}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter, Routes, Route } from 'react-router-dom'\nimport './index.css'\nimport WidgetApp from './WidgetApp'\nimport ChartApp from './ChartApp'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<WidgetApp />} />\n        <Route path=\"/chart\" element={<ChartApp />} />\n      </Routes>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}